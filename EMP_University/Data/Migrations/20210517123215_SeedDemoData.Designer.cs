// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(EMPUniDbContext))]
    [Migration("20210517123215_SeedDemoData")]
    partial class SeedDemoData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Ends")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cours_001",
                            Ends = new DateTime(2021, 5, 18, 17, 32, 14, 550, DateTimeKind.Local).AddTicks(1466),
                            Name = "Cours_001",
                            Start = new DateTime(2021, 5, 18, 15, 32, 14, 550, DateTimeKind.Local).AddTicks(1466)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cours_002",
                            Ends = new DateTime(2021, 5, 19, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2476),
                            Name = "Cours_002",
                            Start = new DateTime(2021, 5, 19, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2476)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Cours_003",
                            Ends = new DateTime(2021, 5, 20, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2537),
                            Name = "Cours_003",
                            Start = new DateTime(2021, 5, 20, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2537)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cours_004",
                            Ends = new DateTime(2021, 5, 21, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2551),
                            Name = "Cours_004",
                            Start = new DateTime(2021, 5, 21, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2551)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Cours_005",
                            Ends = new DateTime(2021, 5, 22, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2563),
                            Name = "Cours_005",
                            Start = new DateTime(2021, 5, 22, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2563)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Cours_006",
                            Ends = new DateTime(2021, 5, 23, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2575),
                            Name = "Cours_006",
                            Start = new DateTime(2021, 5, 23, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2575)
                        },
                        new
                        {
                            Id = 7,
                            Description = "Cours_007",
                            Ends = new DateTime(2021, 5, 24, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2587),
                            Name = "Cours_007",
                            Start = new DateTime(2021, 5, 24, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2587)
                        },
                        new
                        {
                            Id = 8,
                            Description = "Cours_008",
                            Ends = new DateTime(2021, 5, 25, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2599),
                            Name = "Cours_008",
                            Start = new DateTime(2021, 5, 25, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2599)
                        },
                        new
                        {
                            Id = 9,
                            Description = "Cours_009",
                            Ends = new DateTime(2021, 5, 26, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2610),
                            Name = "Cours_009",
                            Start = new DateTime(2021, 5, 26, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2610)
                        },
                        new
                        {
                            Id = 10,
                            Description = "Cours_010",
                            Ends = new DateTime(2021, 5, 27, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2621),
                            Name = "Cours_010",
                            Start = new DateTime(2021, 5, 27, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2621)
                        },
                        new
                        {
                            Id = 11,
                            Description = "Cours_011",
                            Ends = new DateTime(2021, 5, 28, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2632),
                            Name = "Cours_011",
                            Start = new DateTime(2021, 5, 28, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2632)
                        },
                        new
                        {
                            Id = 12,
                            Description = "Cours_012",
                            Ends = new DateTime(2021, 5, 29, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2643),
                            Name = "Cours_012",
                            Start = new DateTime(2021, 5, 29, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2643)
                        },
                        new
                        {
                            Id = 13,
                            Description = "Cours_013",
                            Ends = new DateTime(2021, 5, 30, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2654),
                            Name = "Cours_013",
                            Start = new DateTime(2021, 5, 30, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2654)
                        },
                        new
                        {
                            Id = 14,
                            Description = "Cours_014",
                            Ends = new DateTime(2021, 5, 31, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2665),
                            Name = "Cours_014",
                            Start = new DateTime(2021, 5, 31, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2665)
                        },
                        new
                        {
                            Id = 15,
                            Description = "Cours_015",
                            Ends = new DateTime(2021, 6, 1, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2676),
                            Name = "Cours_015",
                            Start = new DateTime(2021, 6, 1, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2676)
                        },
                        new
                        {
                            Id = 16,
                            Description = "Cours_016",
                            Ends = new DateTime(2021, 6, 2, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2688),
                            Name = "Cours_016",
                            Start = new DateTime(2021, 6, 2, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2688)
                        },
                        new
                        {
                            Id = 17,
                            Description = "Cours_017",
                            Ends = new DateTime(2021, 6, 3, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2699),
                            Name = "Cours_017",
                            Start = new DateTime(2021, 6, 3, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2699)
                        },
                        new
                        {
                            Id = 18,
                            Description = "Cours_018",
                            Ends = new DateTime(2021, 6, 4, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2710),
                            Name = "Cours_018",
                            Start = new DateTime(2021, 6, 4, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2710)
                        },
                        new
                        {
                            Id = 19,
                            Description = "Cours_019",
                            Ends = new DateTime(2021, 6, 5, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2720),
                            Name = "Cours_019",
                            Start = new DateTime(2021, 6, 5, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2720)
                        },
                        new
                        {
                            Id = 20,
                            Description = "Cours_020",
                            Ends = new DateTime(2021, 6, 6, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2731),
                            Name = "Cours_020",
                            Start = new DateTime(2021, 6, 6, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2731)
                        },
                        new
                        {
                            Id = 21,
                            Description = "Cours_021",
                            Ends = new DateTime(2021, 6, 7, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2742),
                            Name = "Cours_021",
                            Start = new DateTime(2021, 6, 7, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2742)
                        },
                        new
                        {
                            Id = 22,
                            Description = "Cours_022",
                            Ends = new DateTime(2021, 6, 8, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2752),
                            Name = "Cours_022",
                            Start = new DateTime(2021, 6, 8, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2752)
                        },
                        new
                        {
                            Id = 23,
                            Description = "Cours_023",
                            Ends = new DateTime(2021, 6, 9, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2763),
                            Name = "Cours_023",
                            Start = new DateTime(2021, 6, 9, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2763)
                        },
                        new
                        {
                            Id = 24,
                            Description = "Cours_024",
                            Ends = new DateTime(2021, 6, 10, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2774),
                            Name = "Cours_024",
                            Start = new DateTime(2021, 6, 10, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2774)
                        },
                        new
                        {
                            Id = 25,
                            Description = "Cours_025",
                            Ends = new DateTime(2021, 6, 11, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2784),
                            Name = "Cours_025",
                            Start = new DateTime(2021, 6, 11, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2784)
                        },
                        new
                        {
                            Id = 26,
                            Description = "Cours_026",
                            Ends = new DateTime(2021, 6, 12, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2795),
                            Name = "Cours_026",
                            Start = new DateTime(2021, 6, 12, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2795)
                        },
                        new
                        {
                            Id = 27,
                            Description = "Cours_027",
                            Ends = new DateTime(2021, 6, 13, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2806),
                            Name = "Cours_027",
                            Start = new DateTime(2021, 6, 13, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2806)
                        },
                        new
                        {
                            Id = 28,
                            Description = "Cours_028",
                            Ends = new DateTime(2021, 6, 14, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2816),
                            Name = "Cours_028",
                            Start = new DateTime(2021, 6, 14, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2816)
                        },
                        new
                        {
                            Id = 29,
                            Description = "Cours_029",
                            Ends = new DateTime(2021, 6, 15, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2827),
                            Name = "Cours_029",
                            Start = new DateTime(2021, 6, 15, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2827)
                        },
                        new
                        {
                            Id = 30,
                            Description = "Cours_030",
                            Ends = new DateTime(2021, 6, 16, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2838),
                            Name = "Cours_030",
                            Start = new DateTime(2021, 6, 16, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2838)
                        },
                        new
                        {
                            Id = 31,
                            Description = "Cours_031",
                            Ends = new DateTime(2021, 6, 17, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2848),
                            Name = "Cours_031",
                            Start = new DateTime(2021, 6, 17, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2848)
                        },
                        new
                        {
                            Id = 32,
                            Description = "Cours_032",
                            Ends = new DateTime(2021, 6, 18, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2859),
                            Name = "Cours_032",
                            Start = new DateTime(2021, 6, 18, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2859)
                        },
                        new
                        {
                            Id = 33,
                            Description = "Cours_033",
                            Ends = new DateTime(2021, 6, 19, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2870),
                            Name = "Cours_033",
                            Start = new DateTime(2021, 6, 19, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2870)
                        },
                        new
                        {
                            Id = 34,
                            Description = "Cours_034",
                            Ends = new DateTime(2021, 6, 20, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2880),
                            Name = "Cours_034",
                            Start = new DateTime(2021, 6, 20, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2880)
                        },
                        new
                        {
                            Id = 35,
                            Description = "Cours_035",
                            Ends = new DateTime(2021, 6, 21, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2891),
                            Name = "Cours_035",
                            Start = new DateTime(2021, 6, 21, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2891)
                        },
                        new
                        {
                            Id = 36,
                            Description = "Cours_036",
                            Ends = new DateTime(2021, 6, 22, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2902),
                            Name = "Cours_036",
                            Start = new DateTime(2021, 6, 22, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2902)
                        },
                        new
                        {
                            Id = 37,
                            Description = "Cours_037",
                            Ends = new DateTime(2021, 6, 23, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2975),
                            Name = "Cours_037",
                            Start = new DateTime(2021, 6, 23, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2975)
                        },
                        new
                        {
                            Id = 38,
                            Description = "Cours_038",
                            Ends = new DateTime(2021, 6, 24, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(2990),
                            Name = "Cours_038",
                            Start = new DateTime(2021, 6, 24, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(2990)
                        },
                        new
                        {
                            Id = 39,
                            Description = "Cours_039",
                            Ends = new DateTime(2021, 6, 25, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3001),
                            Name = "Cours_039",
                            Start = new DateTime(2021, 6, 25, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3001)
                        },
                        new
                        {
                            Id = 40,
                            Description = "Cours_040",
                            Ends = new DateTime(2021, 6, 26, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3012),
                            Name = "Cours_040",
                            Start = new DateTime(2021, 6, 26, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3012)
                        },
                        new
                        {
                            Id = 41,
                            Description = "Cours_041",
                            Ends = new DateTime(2021, 6, 27, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3023),
                            Name = "Cours_041",
                            Start = new DateTime(2021, 6, 27, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3023)
                        },
                        new
                        {
                            Id = 42,
                            Description = "Cours_042",
                            Ends = new DateTime(2021, 6, 28, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3034),
                            Name = "Cours_042",
                            Start = new DateTime(2021, 6, 28, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3034)
                        },
                        new
                        {
                            Id = 43,
                            Description = "Cours_043",
                            Ends = new DateTime(2021, 6, 29, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3045),
                            Name = "Cours_043",
                            Start = new DateTime(2021, 6, 29, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3045)
                        },
                        new
                        {
                            Id = 44,
                            Description = "Cours_044",
                            Ends = new DateTime(2021, 6, 30, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3055),
                            Name = "Cours_044",
                            Start = new DateTime(2021, 6, 30, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3055)
                        },
                        new
                        {
                            Id = 45,
                            Description = "Cours_045",
                            Ends = new DateTime(2021, 7, 1, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3066),
                            Name = "Cours_045",
                            Start = new DateTime(2021, 7, 1, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3066)
                        },
                        new
                        {
                            Id = 46,
                            Description = "Cours_046",
                            Ends = new DateTime(2021, 7, 2, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3077),
                            Name = "Cours_046",
                            Start = new DateTime(2021, 7, 2, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3077)
                        },
                        new
                        {
                            Id = 47,
                            Description = "Cours_047",
                            Ends = new DateTime(2021, 7, 3, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3087),
                            Name = "Cours_047",
                            Start = new DateTime(2021, 7, 3, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3087)
                        },
                        new
                        {
                            Id = 48,
                            Description = "Cours_048",
                            Ends = new DateTime(2021, 7, 4, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3098),
                            Name = "Cours_048",
                            Start = new DateTime(2021, 7, 4, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3098)
                        },
                        new
                        {
                            Id = 49,
                            Description = "Cours_049",
                            Ends = new DateTime(2021, 7, 5, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3109),
                            Name = "Cours_049",
                            Start = new DateTime(2021, 7, 5, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3109)
                        },
                        new
                        {
                            Id = 50,
                            Description = "Cours_050",
                            Ends = new DateTime(2021, 7, 6, 17, 32, 14, 556, DateTimeKind.Local).AddTicks(3119),
                            Name = "Cours_050",
                            Start = new DateTime(2021, 7, 6, 15, 32, 14, 556, DateTimeKind.Local).AddTicks(3119)
                        });
                });

            modelBuilder.Entity("Common.Models.StudentCourse", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourse");

                    b.HasData(
                        new
                        {
                            StudentId = "73b3ca4e-5343-4df8-ac30-fd32aeb1e356",
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = "73b3ca4e-5343-4df8-ac30-fd32aeb1e356",
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = "73b3ca4e-5343-4df8-ac30-fd32aeb1e356",
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = "a38dc379-4cc1-414b-b3a2-d97f4defe8c7",
                            CourseId = 4
                        },
                        new
                        {
                            StudentId = "a38dc379-4cc1-414b-b3a2-d97f4defe8c7",
                            CourseId = 5
                        },
                        new
                        {
                            StudentId = "a38dc379-4cc1-414b-b3a2-d97f4defe8c7",
                            CourseId = 6
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = "73b3ca4e-5343-4df8-ac30-fd32aeb1e356",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6ffe4da2-05c9-4fe8-a33e-ea0e70bc1843",
                            Email = "test1@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAENpNPvp/47Z/iDb6EPAdxcbvbVmim9gpkrvhbkWin9BWxCnIifnOxnHR7i6EMXNKVg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "14895523-aae5-4335-9831-e211cefd1533",
                            TwoFactorEnabled = false,
                            UserName = "test1@example.com"
                        },
                        new
                        {
                            Id = "a38dc379-4cc1-414b-b3a2-d97f4defe8c7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0a31811a-34c9-4e92-b261-b587f4f25a00",
                            Email = "test2@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEA2waOgYmZdfItfjpq+K4YJz0G3nucL6sZEJ1jRQr551cZv578ONJpH7TqZITqfH0w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "630cb14e-ba53-4681-885b-06d68fb5433c",
                            TwoFactorEnabled = false,
                            UserName = "test2@example.com"
                        },
                        new
                        {
                            Id = "8dae27da-4dbb-4878-9c0e-f52126f53260",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a6256859-1052-4ce2-a77a-460eaefe02eb",
                            Email = "test3@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEAJOgnsCqhV523ZGQG+rTXKIvFU7Yq+pO+a86OR4D3Uyaiu3C75KTvBQplG1PhA5Aw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f11fc2a9-9126-4474-86b4-1db595acd409",
                            TwoFactorEnabled = false,
                            UserName = "test3@example.com"
                        },
                        new
                        {
                            Id = "083e1ecf-6d05-47ba-a3c2-da13d03c7e7f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7e75488e-e23d-4781-96d6-ef36ec92eebc",
                            Email = "test4@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEH0PdSpKTwgYWgQlgsgbYSUNab1lbVFgJ8EoLA0peeCCqRO8Fq1XEfT9bhMmTORZEg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7f4b7542-d036-4f7a-9892-24bb3d85ccb3",
                            TwoFactorEnabled = false,
                            UserName = "test4@example.com"
                        },
                        new
                        {
                            Id = "cde148ba-6cd1-4a42-ae62-fe25421dd77f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "af0f3160-dfda-4797-90ae-ef7dcf1250b2",
                            Email = "test5@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEIMfBa72/qZIJqnSMXb44LKnwouANe6HlqNx5opJToHp5UnJMRXUf0iJVV0Ny2xBzw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "577341e0-be25-4a7c-b33b-4731f29bca48",
                            TwoFactorEnabled = false,
                            UserName = "test5@example.com"
                        });
                });

            modelBuilder.Entity("Common.Models.StudentCourse", b =>
                {
                    b.HasOne("Common.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Student", null)
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
