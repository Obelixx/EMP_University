// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(EMPUniDbContext))]
    [Migration("20210517171155_SeedDemoData")]
    partial class SeedDemoData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Ends")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cours_001",
                            Ends = new DateTime(2022, 1, 2, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_001",
                            Start = new DateTime(2022, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cours_002",
                            Ends = new DateTime(2022, 1, 3, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_002",
                            Start = new DateTime(2022, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Cours_003",
                            Ends = new DateTime(2022, 1, 4, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_003",
                            Start = new DateTime(2022, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cours_004",
                            Ends = new DateTime(2022, 1, 5, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_004",
                            Start = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Cours_005",
                            Ends = new DateTime(2022, 1, 6, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_005",
                            Start = new DateTime(2022, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Cours_006",
                            Ends = new DateTime(2022, 1, 7, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_006",
                            Start = new DateTime(2022, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Description = "Cours_007",
                            Ends = new DateTime(2022, 1, 8, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_007",
                            Start = new DateTime(2022, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Description = "Cours_008",
                            Ends = new DateTime(2022, 1, 9, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_008",
                            Start = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Description = "Cours_009",
                            Ends = new DateTime(2022, 1, 10, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_009",
                            Start = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Description = "Cours_010",
                            Ends = new DateTime(2022, 1, 11, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_010",
                            Start = new DateTime(2022, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Description = "Cours_011",
                            Ends = new DateTime(2022, 1, 12, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_011",
                            Start = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Description = "Cours_012",
                            Ends = new DateTime(2022, 1, 13, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_012",
                            Start = new DateTime(2022, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Description = "Cours_013",
                            Ends = new DateTime(2022, 1, 14, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_013",
                            Start = new DateTime(2022, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Description = "Cours_014",
                            Ends = new DateTime(2022, 1, 15, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_014",
                            Start = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Description = "Cours_015",
                            Ends = new DateTime(2022, 1, 16, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_015",
                            Start = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Description = "Cours_016",
                            Ends = new DateTime(2022, 1, 17, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_016",
                            Start = new DateTime(2022, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Description = "Cours_017",
                            Ends = new DateTime(2022, 1, 18, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_017",
                            Start = new DateTime(2022, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Description = "Cours_018",
                            Ends = new DateTime(2022, 1, 19, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_018",
                            Start = new DateTime(2022, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Description = "Cours_019",
                            Ends = new DateTime(2022, 1, 20, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_019",
                            Start = new DateTime(2022, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Description = "Cours_020",
                            Ends = new DateTime(2022, 1, 21, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_020",
                            Start = new DateTime(2022, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            Description = "Cours_021",
                            Ends = new DateTime(2022, 1, 22, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_021",
                            Start = new DateTime(2022, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            Description = "Cours_022",
                            Ends = new DateTime(2022, 1, 23, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_022",
                            Start = new DateTime(2022, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Description = "Cours_023",
                            Ends = new DateTime(2022, 1, 24, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_023",
                            Start = new DateTime(2022, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            Description = "Cours_024",
                            Ends = new DateTime(2022, 1, 25, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_024",
                            Start = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            Description = "Cours_025",
                            Ends = new DateTime(2022, 1, 26, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_025",
                            Start = new DateTime(2022, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            Description = "Cours_026",
                            Ends = new DateTime(2022, 1, 27, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_026",
                            Start = new DateTime(2022, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            Description = "Cours_027",
                            Ends = new DateTime(2022, 1, 28, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_027",
                            Start = new DateTime(2022, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            Description = "Cours_028",
                            Ends = new DateTime(2022, 1, 29, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_028",
                            Start = new DateTime(2022, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            Description = "Cours_029",
                            Ends = new DateTime(2022, 1, 30, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_029",
                            Start = new DateTime(2022, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            Description = "Cours_030",
                            Ends = new DateTime(2022, 1, 31, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_030",
                            Start = new DateTime(2022, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            Description = "Cours_031",
                            Ends = new DateTime(2022, 2, 1, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_031",
                            Start = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            Description = "Cours_032",
                            Ends = new DateTime(2022, 2, 2, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_032",
                            Start = new DateTime(2022, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            Description = "Cours_033",
                            Ends = new DateTime(2022, 2, 3, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_033",
                            Start = new DateTime(2022, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            Description = "Cours_034",
                            Ends = new DateTime(2022, 2, 4, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_034",
                            Start = new DateTime(2022, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            Description = "Cours_035",
                            Ends = new DateTime(2022, 2, 5, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_035",
                            Start = new DateTime(2022, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            Description = "Cours_036",
                            Ends = new DateTime(2022, 2, 6, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_036",
                            Start = new DateTime(2022, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            Description = "Cours_037",
                            Ends = new DateTime(2022, 2, 7, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_037",
                            Start = new DateTime(2022, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            Description = "Cours_038",
                            Ends = new DateTime(2022, 2, 8, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_038",
                            Start = new DateTime(2022, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            Description = "Cours_039",
                            Ends = new DateTime(2022, 2, 9, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_039",
                            Start = new DateTime(2022, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            Description = "Cours_040",
                            Ends = new DateTime(2022, 2, 10, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_040",
                            Start = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            Description = "Cours_041",
                            Ends = new DateTime(2022, 2, 11, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_041",
                            Start = new DateTime(2022, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            Description = "Cours_042",
                            Ends = new DateTime(2022, 2, 12, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_042",
                            Start = new DateTime(2022, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            Description = "Cours_043",
                            Ends = new DateTime(2022, 2, 13, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_043",
                            Start = new DateTime(2022, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            Description = "Cours_044",
                            Ends = new DateTime(2022, 2, 14, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_044",
                            Start = new DateTime(2022, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            Description = "Cours_045",
                            Ends = new DateTime(2022, 2, 15, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_045",
                            Start = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            Description = "Cours_046",
                            Ends = new DateTime(2022, 2, 16, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_046",
                            Start = new DateTime(2022, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            Description = "Cours_047",
                            Ends = new DateTime(2022, 2, 17, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_047",
                            Start = new DateTime(2022, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            Description = "Cours_048",
                            Ends = new DateTime(2022, 2, 18, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_048",
                            Start = new DateTime(2022, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            Description = "Cours_049",
                            Ends = new DateTime(2022, 2, 19, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_049",
                            Start = new DateTime(2022, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            Description = "Cours_050",
                            Ends = new DateTime(2022, 2, 20, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cours_050",
                            Start = new DateTime(2022, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Common.Models.StudentCourse", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourse");

                    b.HasData(
                        new
                        {
                            StudentId = "1",
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = "1",
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = "1",
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = "2",
                            CourseId = 4
                        },
                        new
                        {
                            StudentId = "2",
                            CourseId = 5
                        },
                        new
                        {
                            StudentId = "2",
                            CourseId = 6
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9115fc36-3f95-456b-b6bb-861bbf5e0846",
                            Email = "test1@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEGLUd/3W/lZw0YuQEy5uoORLKsQulc03nFpk3vncCEJrr0sWnWoSXES6XrGtJzv1mA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aa2d54a4-d2a8-4176-9030-38ed62b1cffb",
                            TwoFactorEnabled = false,
                            UserName = "test1@example.com"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c51026f8-3c38-4f14-98c4-ce3ec654d92c",
                            Email = "test2@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEJbXu3fI9byGaRcX9oKsIxmRSeBlbbEOUi51PfnG55bWdJjVAO6QpXez3BDGfTKvng==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4665666a-9e3a-4a84-ae62-0600ac98d284",
                            TwoFactorEnabled = false,
                            UserName = "test2@example.com"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7abd9095-0273-4c05-8cd8-94102d6a109f",
                            Email = "test3@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAELyyELOk379Aopk1oHzEfpBNuLxKIMsvIiiPVdLhBTKr/CS6jCQvaXi+zcfVkZh2iQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4beb3a68-f91c-4bdd-b165-2fe208fe4201",
                            TwoFactorEnabled = false,
                            UserName = "test3@example.com"
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4e59e8b8-5dc5-4f40-b3b3-ae035050551a",
                            Email = "test4@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEJQEBVrZ2wo+FnL7cnS9+FVcWg42MdPwjgPLvVR4tbOFJH+GWHsHKhSm++x1/9nA1w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "949811fe-9a76-482f-b8e5-28ac08a8143c",
                            TwoFactorEnabled = false,
                            UserName = "test4@example.com"
                        },
                        new
                        {
                            Id = "5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8e33e23d-0af2-4831-ace3-f13e1d6482ad",
                            Email = "test5@example.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEJvGLXDb0cxDT37Hab86uLPkPcS6HOqCdmrm4dXZ32ZCJk1xHQJwk1EA0Vmmweng3A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "af7dddb4-03c2-45ff-b5b6-44e8a0773f4c",
                            TwoFactorEnabled = false,
                            UserName = "test5@example.com"
                        });
                });

            modelBuilder.Entity("Common.Models.StudentCourse", b =>
                {
                    b.HasOne("Common.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Student", null)
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
